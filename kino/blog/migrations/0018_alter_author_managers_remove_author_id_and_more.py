# Generated by Django 4.2.10 on 2024-04-23 11:15

import django.contrib.auth.models
import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.snippets.blocks
from django.conf import settings
from django.db import migrations, models

import kino.blog.snippets


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("cards", "0025_alter_film_film_crew_alter_serial_film_crew"),
        ("blog", "0017_author_country_alter_author_author_image_and_more"),
    ]

    operations = [
        migrations.AlterModelManagers(
            name="author",
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name="author",
            name="id",
        ),
        migrations.RemoveField(
            model_name="author",
            name="name",
        ),
        migrations.AddField(
            model_name="author",
            name="first_name",
            field=models.CharField(blank=True, max_length=255, verbose_name="Имя"),
        ),
        migrations.AddField(
            model_name="author",
            name="last_name",
            field=models.CharField(blank=True, max_length=255, verbose_name="Фамилия"),
        ),
        migrations.AddField(
            model_name="author",
            name="user_ptr",
            field=models.OneToOneField(
                auto_created=True,
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                parent_link=True,
                primary_key=True,
                serialize=False,
                to=settings.AUTH_USER_MODEL,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="author",
            name="country",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="cards.country",
                verbose_name="Страна",
            ),
        ),
        migrations.AlterField(
            model_name="author",
            name="profession",
            field=models.CharField(
                blank=True, max_length=255, verbose_name="Профессия"
            ),
        ),
        migrations.AlterField(
            model_name="blogpage",
            name="authors",
            field=modelcluster.fields.ParentalManyToManyField(
                blank=True, to="blog.author", verbose_name="Авторы"
            ),
        ),
        migrations.AlterField(
            model_name="blogpage",
            name="body",
            field=wagtail.fields.StreamField(
                [
                    ("text", wagtail.blocks.RichTextBlock(label="Текст блога")),
                    (
                        "image",
                        wagtail.images.blocks.ImageChooserBlock(
                            help_text="Добавьте изображение", label="Изображение"
                        ),
                    ),
                    (
                        "film_blog",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "film",
                                    wagtail.snippets.blocks.SnippetChooserBlock(
                                        kino.blog.snippets.FilmBlog,
                                        help_text="Укажите фильм",
                                        label="Фильм",
                                        required=False,
                                    ),
                                ),
                                ("film_2", wagtail.blocks.RichTextBlock("фильм 2")),
                                ("film_3", wagtail.blocks.RichTextBlock("фильм 3")),
                            ],
                            help_text="Выберите вариант отображения фильма",
                            label="Фильмы",
                            required=False,
                        ),
                    ),
                    (
                        "serial",
                        wagtail.snippets.blocks.SnippetChooserBlock(
                            kino.blog.snippets.SerialBlog,
                            help_text="Укажите сериал",
                            label="Сериал",
                            required=False,
                        ),
                    ),
                ],
                blank=True,
                verbose_name="Основная часть",
            ),
        ),
    ]
