# Generated by Django 4.2.10 on 2024-02-22 11:24

from django.db import migrations, models
import enumchoicefield.fields
import kino.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название на русском')),
                ('description', models.TextField(verbose_name='Описание')),
                ('avg_rating', models.FloatField(default=0.0, verbose_name='Рейтинг пользователей')),
                ('id_imdb', models.CharField(max_length=255, verbose_name='ID фильма/сериала на IMDb')),
                ('rating_imdb', models.FloatField(default=0.0, verbose_name='Рейтинг IMDb')),
                ('age_restriction', enumchoicefield.fields.EnumChoiceField(default='0+', enum_class=kino.enums.AgeChoose, max_length=8, verbose_name='Возрастное ограничение')),
                ('trailer', models.URLField(default=None, verbose_name='Трейлер')),
                ('poster', models.ImageField(upload_to='posters/', verbose_name='Постер')),
                ('is_visible', models.BooleanField(default=False, verbose_name='Публикация')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Год выхода фильма')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='PhotoFilm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_film', models.ImageField(upload_to='photos_films/', verbose_name='Кадры из фильма')),
            ],
        ),
        migrations.CreateModel(
            name='PhotoSerial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_serial', models.ImageField(upload_to='photos_films/', verbose_name='Кадры из фильма')),
            ],
        ),
        migrations.CreateModel(
            name='Serial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название на русском')),
                ('description', models.TextField(verbose_name='Описание')),
                ('avg_rating', models.FloatField(default=0.0, verbose_name='Рейтинг пользователей')),
                ('id_imdb', models.CharField(max_length=255, verbose_name='ID фильма/сериала на IMDb')),
                ('rating_imdb', models.FloatField(default=0.0, verbose_name='Рейтинг IMDb')),
                ('age_restriction', enumchoicefield.fields.EnumChoiceField(default="0+", enum_class=kino.enums.AgeChoose, max_length=8, verbose_name='Возрастное ограничение')),
                ('trailer', models.URLField(default=None, verbose_name='Трейлер')),
                ('poster', models.ImageField(upload_to='posters/', verbose_name='Постер')),
                ('is_visible', models.BooleanField(default=False, verbose_name='Публикация')),
                ('start_year', models.PositiveSmallIntegerField(verbose_name='Год начала выхода сериала')),
                ('end_year', models.PositiveSmallIntegerField(default=2024, verbose_name='Год окончания выхода сериала')),
                ('num_seasons', models.PositiveSmallIntegerField(verbose_name='Количество сезонов')),
                ('num_episodes', models.PositiveSmallIntegerField(verbose_name='Количество серий')),
                ('country', models.ManyToManyField(to='cards.country', verbose_name='Страна производитель')),
            ],
            options={
                'verbose_name': 'Сериал',
                'verbose_name_plural': 'Сериалы',
            },
        ),
    ]
