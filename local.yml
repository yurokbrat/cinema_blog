version: '3'

volumes:
  kino_local_postgres_data: {}
  kino_local_postgres_data_backups: {}
  minio_data:

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: kino_local_django
    container_name: kino_local_django
    depends_on:
      - postgres
      - redis
      - mailpit
      - minio
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '7362:7362'
    command: /start
    networks:
      - kino-net

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: kino_production_postgres
    container_name: kino_local_postgres
    volumes:
      - kino_local_postgres_data:/var/lib/postgresql/data
      - kino_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    networks:
      - kino-net

  docs:
    image: kino_local_docs
    container_name: kino_local_docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./kino:/app/kino:z
    ports:
      - '9090:9090'
    command: /start-docs
    networks:
      - kino-net

  mailpit:
    image: docker.io/axllent/mailpit:latest
    container_name: kino_local_mailpit
    ports:
      - "8025:8025"
    networks:
      - kino-net

  redis:
    image: docker.io/redis:6
    container_name: kino_local_redis
    networks:
      - kino-net

  celeryworker:
    <<: *django
    image: kino_local_celeryworker
    container_name: kino_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailpit
    ports: []
    command: /start-celeryworker
    networks:
      - kino-net

  celerybeat:
    <<: *django
    image: kino_local_celerybeat
    container_name: kino_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailpit
    ports: []
    command: /start-celerybeat
    networks:
      - kino-net

  flower:
    <<: *django
    image: kino_local_flower
    container_name: kino_local_flower
    ports:
      - '5555:5555'
    command: /start-flower
    networks:
      - kino-net

  minio:
    image: minio/minio:RELEASE.2023-11-01T01-57-10Z-cpuv1
    ports:
      - 9000:9000
      - 9001:9001
    healthcheck:
      test: [ "CMD", "curl", "-f",
              "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - minio_data:/data
    env_file:
      - ./.envs/.local/.django
    command: server --console-address ":9001" /data
    networks:
      - kino-net

networks:
  kino-net:
    driver: bridge
