image: docker:20.10.16
stages:
  - lint
  - test
  - deploy

variables:
  POSTGRES_USER: 'kino'
  POSTGRES_PASSWORD: ''
  POSTGRES_DB: 'test_kino'
  POSTGRES_HOST_AUTH_METHOD: trust
  CELERY_BROKER_URL: 'redis://redis:6379/0'

precommit:
  stage: lint
  image: python:3.11
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  cache:
    paths:
      - ${PRE_COMMIT_HOME}
  before_script:
    - pip install -q pre-commit
  script:
    - pre-commit run --show-diff-on-failure --color=always --all-files

pytest:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker-compose -f test.yml build
    - docker-compose -f test.yml run --rm django_kino_test python manage.py migrate
    - docker-compose -f test.yml up -d
  script:
    - docker-compose -f test.yml run --rm django_kino_test python manage.py makemigrations --check --dry-run
    - docker-compose -f test.yml run --rm django_kino_test mypy .
    - docker-compose -f test.yml run django_kino_test pytest -n auto --create-db
    - docker-compose -f test.yml down
    - docker image rm postgres_kino_test

deploy:
  stage: deploy
  image: docker:latest
  script:
    - ssh-keygen -t rsa -b 4096 -C "yuriy.belotserkovskiy@redcollar.ru" -N "" -f ~/.ssh/id_rsa
    - cat ~/.ssh/id_rsa.pub
    - cat ~/.ssh/id_rsa
    - ssh -tt $SERVER_USER@$SERVER_HOST
    - cd kino_server/Belotserkovskiy
    - git pull https://${CI_USERNAME}:${CI_PASSWORD}@${CI_PATH}
    - docker-compose -f production.yml up --build --detach
    - docker image prune -f || true
  when: manual
