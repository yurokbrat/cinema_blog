image: docker:20.10.16
stages:
  - lint
  - test
  - deploy

variables:
  POSTGRES_USER: 'kino'
  POSTGRES_PASSWORD: ''
  POSTGRES_DB: 'test_kino'
  POSTGRES_HOST_AUTH_METHOD: trust
  CELERY_BROKER_URL: 'redis://redis:6379/0'

precommit:
  stage: lint
  image: python:3.11
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  cache:
    paths:
      - ${PRE_COMMIT_HOME}
  before_script:
    - pip install -q pre-commit
  script:
    - pre-commit run --show-diff-on-failure --color=always --all-files

pytest:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker-compose -f local.yml build
    - docker-compose -f local.yml run --rm django python manage.py migrate
    - docker-compose -f local.yml up -d
  script:
    - docker-compose -f local.yml run django pytest

deploy:
  stage: deploy
  image: docker:latest
  variables:
    DOCKER_HOST: "ssh://${SERVER_USER}@${SERVER_HOST}"
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "${SSH_KEY}" | tr -d '\r' | ssh-add -
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker compose --env-file $ENV_FILE pull
    - docker compose --env-file $ENV_FILE down --timeout=60 --remove-orphans
    - docker compose --env-file $ENV_FILE up --build --detach
    - docker image prune -f || true
  when: manual
